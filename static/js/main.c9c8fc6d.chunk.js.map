{"version":3,"sources":["components/layout/spinner.gif","components/layout/Navbar.jsx","components/pages/About.js","context/alert/alertContext.js","components/layout/Alert.js","context/github/githubContext.js","components/users/Search.js","components/layout/Spinner.js","components/users/UserItem.js","components/users/Users.js","components/repos/RepoItem.js","components/repos/Repos.js","components/users/User.js","context/github/githubReducer.js","context/types.js","context/github/GithubState.js","context/alert/alertReducer.js","context/alert/AlertState.js","components/pages/Notfound.js","App.js","index.js"],"names":["module","exports","Navbar","icon","title","className","to","defaultProps","About","alertContext","createContext","Alert","alert","useContext","AlertContext","type","msg","githubContext","require","Search","GithubContext","useState","text","setText","onSubmit","e","preventDefault","setAlert","searchUsers","action","name","placeholder","value","onChange","target","users","length","onClick","clearUsers","Spinner","src","spinner","alt","style","width","margin","display","UserItem","user","login","avatar_url","html_url","userStyle","gridTemplateColumns","gridGap","Users","loading","map","key","id","RepoItem","repo","href","prototype","PropTypes","object","isRequired","Repos","repos","array","User","match","getUser","getUserRepos","useEffect","params","location","bio","company","blog","followers","following","public_repos","public_gists","hireable","state","payload","GithubState","props","useReducer","GithubReducer","dispatch","a","setLoading","Axios","get","process","res","data","items","username","Provider","children","AlertState","AlertReducer","setTimeout","Notfound","App","exact","path","render","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,qC,mJCIrCC,G,MAAS,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACtB,OACE,yBAAKC,UAAU,qBACb,kBAAC,IAAD,CAAMC,GAAG,KACP,4BACE,uBAAGD,UAAWF,IACbC,IAGL,4BACE,4BACE,kBAAC,IAAD,CAAME,GAAG,KAAT,SAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,UAAT,cAOVJ,EAAOK,aAAe,CACpBH,MAAO,gBACPD,KAAM,iBAQOD,QCvBAM,EAVD,WACZ,OACE,kBAAC,WAAD,KACE,8CACA,yDACA,4CCJSC,EAFMC,0BCeNC,EAbD,WACZ,IACQC,EADaC,qBAAWC,GACxBF,MACR,OACY,OAAVA,GACE,yBAAKP,UAAS,sBAAiBO,EAAMG,OACnC,uBAAGV,UAAU,uBACXO,EAAMI,M,QCNDC,GAFOP,EAFIQ,EAAQ,GAA1BR,iBC+COS,EA3CA,WACb,IAAMF,EAAgBJ,qBAAWO,GAC3BX,EAAeI,qBAAWC,GAFb,EAGKO,mBAAS,IAHd,mBAGZC,EAHY,KAGNC,EAHM,KAkBnB,OACE,6BACE,0BAAMC,SAZO,SAACC,GAChBA,EAAEC,iBACW,KAATJ,EACFb,EAAakB,SAAS,yBAA0B,UAEhDV,EAAcW,YAAYN,GAC1BC,EAAQ,MAMkBM,OAAO,GAAGxB,UAAU,QAC5C,2BACEU,KAAK,OACLe,KAAK,OACLC,YAAY,kBACZC,MAAOV,EACPW,SArBS,SAACR,GAChBF,EAAQE,EAAES,OAAOF,UAsBb,2BACEjB,KAAK,SACLiB,MAAM,SACN3B,UAAU,4BAGbY,EAAckB,MAAMC,OAAS,GAC5B,4BAAQ/B,UAAU,0BAA0BgC,QAASpB,EAAcqB,YAAnE,W,iBCxBOC,EAZC,WACd,OACE,kBAAC,WAAD,KACE,yBACEC,IAAKC,IACLC,IAAI,UACJC,MAAO,CAAEC,MAAO,QAASC,OAAQ,OAAQC,QAAS,aCmB3CC,EAxBE,SAAC,GAA+C,IAAD,IAA5CC,KAAQC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,SAE7C,OACE,yBAAK9C,UAAU,oBACb,yBACEmC,IAAKU,EACLR,IAAI,UACJrC,UAAU,YACVsC,MAAO,CAAEC,MAAO,UAElB,4BAAKK,GACL,4BAAKE,GACL,6BACE,kBAAC,IAAD,CAAM7C,GAAE,gBAAW2C,GAAS5C,UAAU,4BAAtC,WCSF+C,EAAY,CAChBN,QAAS,OACTO,oBAAqB,kBACrBC,QAAS,QAGIC,EAzBD,WAEZ,IAAMtC,EAAgBJ,qBAAWO,GACzBoC,EAAmBvC,EAAnBuC,QAASrB,EAAUlB,EAAVkB,MAEjB,OAAIqB,EACK,kBAAC,EAAD,MAGL,yBAAKb,MAAOS,GACTjB,EAAMsB,KAAI,SAACT,GAAD,OACT,kBAAC,EAAD,CAAUU,IAAKV,EAAKW,GAAIX,KAAMA,S,gBCflCY,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClB,OACE,yBAAKxD,UAAU,QACb,4BACE,uBAAGyD,KAAMD,EAAKV,UAAWU,EAAK/B,SAMtC8B,EAASG,UAAY,CACnBF,KAAMG,IAAUC,OAAOC,YAGVN,QCbTO,EAAQ,SAAC,GACX,OADyB,EAAZC,MAEHX,KAAI,SAAAI,GAAI,OAAI,kBAAC,EAAD,CAAUH,IAAKG,EAAKF,GAAIE,KAAMA,QAIxDM,EAAMJ,UAAY,CACdK,MAAOJ,IAAUK,MAAMH,YAGZC,QC2FAG,EAlGF,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACRtD,EAAgBJ,qBAAWO,GACzBoD,EAAgDvD,EAAhDuD,QAAShB,EAAuCvC,EAAvCuC,QAASR,EAA8B/B,EAA9B+B,KAAMoB,EAAwBnD,EAAxBmD,MAAOK,EAAiBxD,EAAjBwD,aAEvCC,qBAAU,WACRF,EAAQD,EAAMI,OAAO1B,OACrBwB,EAAaF,EAAMI,OAAO1B,SAEzB,IARuB,IAWxBnB,EAaEkB,EAbFlB,KACAoB,EAYEF,EAZFE,WACA0B,EAWE5B,EAXF4B,SACAC,EAUE7B,EAVF6B,IACA5B,EASED,EATFC,MACA6B,EAQE9B,EARF8B,QACA3B,EAOEH,EAPFG,SACA4B,EAME/B,EANF+B,KACAC,EAKEhC,EALFgC,UACAC,EAIEjC,EAJFiC,UACAC,EAGElC,EAHFkC,aACAC,EAEEnC,EAFFmC,aACAC,EACEpC,EADFoC,SAGF,OAAI5B,EAAgB,kBAAC,EAAD,MAElB,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAMlD,GAAG,IAAID,UAAU,iBAAvB,kBADF,WAIa,IACV+E,EACC,uBAAG/E,UAAU,8BAEX,uBAAGA,UAAU,oCAEjB,yBAAKA,UAAU,eACb,yBAAKA,UAAU,cACb,yBACEmC,IAAKU,EACLR,IAAI,kBACJrC,UAAU,YACVsC,MAAO,CAAEC,MAAO,WAElB,4BAAKd,GACL,wCAAc8C,IAEhB,6BACGC,GACC,kBAAC,WAAD,KACE,mCACA,2BAAIA,IAGR,uBAAGf,KAAMX,EAAU9C,UAAU,qBAA7B,wBAGA,4BACE,4BACG4C,GACC,kBAAC,WAAD,KACE,8CADF,IAC+BA,IAInC,4BACG6B,GACC,kBAAC,WAAD,KACE,6CADF,IAC8BA,IAIlC,4BACGC,GACC,kBAAC,WAAD,KACE,6CADF,IAC8BA,OAOxC,yBAAK1E,UAAU,oBACb,yBAAKA,UAAU,uBAAf,cAAiD2E,GACjD,yBAAK3E,UAAU,uBAAf,cAAiD4E,GACjD,yBAAK5E,UAAU,qBAAf,iBAAkD6E,GAClD,yBAAK7E,UAAU,oBAAf,iBAAiD8E,IAEnD,kBAAC,EAAD,CAAOf,MAAOA,M,iDCxFL,WAACiB,EAAOxD,GACnB,OAAQA,EAAOd,MACX,ICXoB,eDYhB,OAAO,2BACAsE,GADP,IAEIlD,MAAON,EAAOyD,QACd9B,SAAS,IAEjB,IChBgB,WDiBZ,OAAO,2BACA6B,GADP,IAEIrC,KAAMnB,EAAOyD,QACb9B,SAAS,IAEjB,ICpBiB,YDqBb,OAAO,2BACA6B,GADP,IAEIjB,MAAOvC,EAAOyD,QACd9B,SAAS,IAEjB,IC3BmB,cD4Bf,OAAO,2BACA6B,GADP,IAEIlD,MAAO,GACPqB,SAAS,IAEjB,IC/BmB,cDgCf,OAAO,2BACA6B,GADP,IAEI7B,SAAS,IAEjB,QACI,OAAO6B,IE8BJE,EA1DK,SAAAC,GAChB,IADyB,EAQCC,qBAAWC,EAPhB,CACjBvD,MAAO,GACPa,KAAM,GACNoB,MAAO,GACPZ,SAAS,IALY,mBAQlB6B,EARkB,KAQXM,EARW,KAWnB/D,EAAW,uCAAG,WAAON,GAAP,eAAAsE,EAAA,6DAChBC,IADgB,SAEEC,IAAMC,IAAN,gDAC2BzE,EAD3B,sBAC6C0E,uBAD7C,0BACqGA,6CAHvG,OAEVC,EAFU,OAIhBN,EAAS,CAAE5E,KD5BS,eC4BWuE,QAASW,EAAIC,KAAKC,QAJjC,2CAAH,sDAQX3B,EAAO,uCAAG,WAAO4B,GAAP,eAAAR,EAAA,6DACZC,IADY,SAEMC,IAAMC,IAAN,uCACkBK,EADlB,sBACwCJ,uBADxC,0BACgGA,6CAHtG,OAENC,EAFM,OAIZN,EAAS,CAAE5E,KDnCK,WCmCWuE,QAASW,EAAIC,OAJ5B,2CAAH,sDAQPzB,EAAY,uCAAG,WAAO2B,GAAP,eAAAR,EAAA,6DACjBC,IADiB,SAECC,IAAMC,IAAN,uCACkBK,EADlB,yDAC2EJ,uBAD3E,0BACmIA,6CAHpI,OAEXC,EAFW,OAIjBN,EAAS,CAAE5E,KDzCM,YCyCWuE,QAASW,EAAIC,OAJxB,2CAAH,sDAWZL,EAAa,kBAAMF,EAAS,CAAE5E,KD/Cb,iBCmDvB,OAAO,kBAAC,EAAcsF,SAAf,CACHrE,MAAO,CACHG,MAAOkD,EAAMlD,MACba,KAAMqC,EAAMrC,KACZoB,MAAOiB,EAAMjB,MACbZ,QAAS6B,EAAM7B,QACf5B,cACA4C,UACAC,eACAnC,WAhBW,kBAAMqD,EAAS,CAAE5E,KD9Cb,mBCiElByE,EAAMc,WCjEA,WAACjB,EAAOxD,GACnB,OAAQA,EAAOd,MACX,IFCiB,YEAb,OAAOc,EAAOyD,QAClB,IFAoB,eEChB,OAAO,KACX,QACI,OAAOD,ICeJkB,EAnBI,SAAAf,GACf,IADwB,EAEEC,qBAAWe,EADhB,MADG,mBAEjBnB,EAFiB,KAEVM,EAFU,KAUxB,OAAO,kBAAC,EAAaU,SAAd,CACHrE,MAAO,CACHpB,MAAOyE,EACP1D,SARS,SAACX,EAAKD,GACnB4E,EAAS,CAAE5E,KHNM,YGMWuE,QAAS,CAAEtE,MAAKD,UAC5C0F,YAAW,kBAAMd,EAAS,CAAE5E,KHNR,mBGM+B,QAQlDyE,EAAMc,WCTAI,EATE,WACf,OACE,6BACE,6CACA,uBAAGrG,UAAU,QAAb,sDC6CSsG,EArCH,WAMV,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,yBAAKtG,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEuG,OAAK,EACLC,KAAK,IACLC,OAAQ,SAACtB,GAAD,OACN,kBAAC,WAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,UAIN,kBAAC,IAAD,CAAOoB,OAAK,EAACC,KAAK,SAASE,UAAWvG,IACtC,kBAAC,IAAD,CAAOoG,OAAK,EAACC,KAAK,eAAeE,UAAWzC,IAC5C,kBAAC,IAAD,CAAOyC,UAAWL,WCpClCM,IAASF,OACP,kBAAC,IAAMG,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.c9c8fc6d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.37533f84.gif\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = ({ icon, title }) => {\r\n  return (\r\n    <nav className='navbar bg-primary'>\r\n      <Link to='/'>\r\n        <h1>\r\n          <i className={icon}></i>\r\n          {title}\r\n        </h1>\r\n      </Link>\r\n      <ul>\r\n        <li>\r\n          <Link to='/'>Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to='/about'>About</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Github Finder\",\r\n  icon: \"fab fa-github\",\r\n};\r\n// eslint-disable-next-line react/no-typos\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  icon: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { Fragment } from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <Fragment>\r\n      <h1>About This App</h1>\r\n      <p>App to search Github users</p>\r\n      <p>Version:1.0</p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { createContext } from 'react';\r\nconst alertContext = createContext();\r\n\r\nexport default alertContext;","import React, { useContext } from \"react\";\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nconst Alert = () => {\r\n  const alertContext = useContext(AlertContext);\r\n  const { alert } = alertContext;\r\n  return (\r\n    alert !== null && (\r\n      <div className={`alert alert-${alert.type}`}>\r\n        <i className='fas fa-info-circle' />\r\n        { alert.msg}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","const { createContext } = require(\"react\");\r\n\r\nconst githubContext = createContext();\r\n\r\nexport default githubContext;","import React, { useState, useContext } from \"react\";\r\nimport GithubContext from '../../context/github/githubContext';\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nconst Search = () => {\r\n  const githubContext = useContext(GithubContext);\r\n  const alertContext = useContext(AlertContext);\r\n  const [text, setText] = useState('')\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (text === \"\") {\r\n      alertContext.setAlert(\"Please enter something\", \"light\");\r\n    } else {\r\n      githubContext.searchUsers(text);\r\n      setText('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit} action='' className='form'>\r\n        <input\r\n          type='text'\r\n          name='text'\r\n          placeholder='search Users...'\r\n          value={text}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type='submit'\r\n          value='Search'\r\n          className='btn btn-dark btn-block'\r\n        />\r\n      </form>\r\n      {githubContext.users.length > 0 && (\r\n        <button className='btn btn-light btn-block' onClick={githubContext.clearUsers}>\r\n          Clear\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React, { Fragment } from \"react\";\r\nimport spinner from \"./spinner.gif\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <Fragment>\r\n      <img\r\n        src={spinner}\r\n        alt='loading'\r\n        style={{ width: \"200px\", margin: \"auto\", display: \"block\" }}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UserItem = ({ user: { login, avatar_url, html_url } }) => {\r\n\r\n  return (\r\n    <div className='card text-center'>\r\n      <img\r\n        src={avatar_url}\r\n        alt='profile'\r\n        className='round-img'\r\n        style={{ width: \"60px\" }}\r\n      />\r\n      <h3>{login}</h3>\r\n      <h5>{html_url}</h5>\r\n      <div>\r\n        <Link to={`/user/${login}`} className='btn btn-dark btn-sm my-1'>More</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// eslint-disable-next-line react/no-typos\r\nUserItem.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default UserItem;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport Spinner from \"../layout/Spinner\";\r\nimport UserItem from \"./UserItem\";\r\n\r\nimport GithubContext from '../../context/github/githubContext';\r\n\r\nconst Users = () => {\r\n\r\n  const githubContext = useContext(GithubContext)\r\n  const { loading, users } = githubContext;\r\n\r\n  if (loading) {\r\n    return <Spinner />;\r\n  } else {\r\n    return (\r\n      <div style={userStyle}>\r\n        {users.map((user) => (\r\n          <UserItem key={user.id} user={user} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\nconst userStyle = {\r\n  display: \"grid\",\r\n  gridTemplateColumns: \"repeat(3 , 1fr)\",\r\n  gridGap: \"1rem\",\r\n};\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst RepoItem = ({ repo }) => {\r\n  return (\r\n    <div className='card'>\r\n      <h3>\r\n        <a href={repo.html_url}>{repo.name}</a>\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nRepoItem.prototype = {\r\n  repo: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default RepoItem;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport RepoItem from './RepoItem'\r\n\r\nconst Repos = ({ repos }) => {\r\n    return (\r\n        repos.map(repo => <RepoItem key={repo.id} repo={repo} />)\r\n    )\r\n}\r\n\r\nRepos.prototype = {\r\n    repos: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default Repos\r\n","import React, { useEffect, Fragment, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport Repos from \"../repos/Repos\";\r\n\r\nimport GithubContext from '../../context/github/githubContext';\r\n\r\nconst User = ({ match }) => {\r\n  const githubContext = useContext(GithubContext)\r\n  const { getUser, loading, user, repos, getUserRepos } = githubContext;\r\n\r\n  useEffect(() => {\r\n    getUser(match.params.login);\r\n    getUserRepos(match.params.login);\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const {\r\n    name,\r\n    avatar_url,\r\n    location,\r\n    bio,\r\n    login,\r\n    company,\r\n    html_url,\r\n    blog,\r\n    followers,\r\n    following,\r\n    public_repos,\r\n    public_gists,\r\n    hireable,\r\n  } = user;\r\n\r\n  if (loading) return <Spinner />;\r\n  return (\r\n    <Fragment>\r\n      <Link to='/' className='btn btn-light'>\r\n        Back to Search\r\n        </Link>\r\n        Hirable:{\" \"}\r\n      {hireable ? (\r\n        <i className='fas fa-check text-success' />\r\n      ) : (\r\n          <i className='fas fa-times-circle text-danger' />\r\n        )}\r\n      <div className='card grid-2'>\r\n        <div className='all-center'>\r\n          <img\r\n            src={avatar_url}\r\n            alt='profile_picture'\r\n            className='round-img'\r\n            style={{ width: \"150px\" }}\r\n          />\r\n          <h1>{name}</h1>\r\n          <p>Location: {location}</p>\r\n        </div>\r\n        <div>\r\n          {bio && (\r\n            <Fragment>\r\n              <h3>Bio</h3>\r\n              <p>{bio}</p>\r\n            </Fragment>\r\n          )}\r\n          <a href={html_url} className='btn btn-dark my-1'>\r\n            Visit Github Profile\r\n            </a>\r\n          <ul>\r\n            <li>\r\n              {login && (\r\n                <Fragment>\r\n                  <strong>Username: </strong> {login}\r\n                </Fragment>\r\n              )}\r\n            </li>\r\n            <li>\r\n              {company && (\r\n                <Fragment>\r\n                  <strong>Company: </strong> {company}\r\n                </Fragment>\r\n              )}\r\n            </li>\r\n            <li>\r\n              {blog && (\r\n                <Fragment>\r\n                  <strong>Website: </strong> {blog}\r\n                </Fragment>\r\n              )}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className='card text-center'>\r\n        <div className='badge badge-primary'>Followers: {followers}</div>\r\n        <div className='badge badge-success'>Following: {following}</div>\r\n        <div className='badge badge-light'>Public Repos: {public_repos}</div>\r\n        <div className='badge badge-dark'>Public Gists: {public_gists}</div>\r\n      </div>\r\n      <Repos repos={repos} />\r\n    </Fragment>\r\n  );\r\n\r\n}\r\n\r\n\r\n\r\nexport default User;\r\n","import {\r\n    SEARCH_USERS,\r\n    SET_LOADING,\r\n    CLEAR_USERS,\r\n    GET_USER,\r\n    GET_REPOS\r\n} from '../types';\r\n\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case SEARCH_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.payload,\r\n                loading: false\r\n            }\r\n        case GET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                loading: false\r\n            }\r\n        case GET_REPOS:\r\n            return {\r\n                ...state,\r\n                repos: action.payload,\r\n                loading: false\r\n            }\r\n        case CLEAR_USERS:\r\n            return {\r\n                ...state,\r\n                users: [],\r\n                loading: false\r\n            }\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","export const SEARCH_USERS = \"SEARCH_USERS\";\r\nexport const GET_USER = 'GET_USER';\r\nexport const CLEAR_USERS = 'CLEAR_USERS';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';","import React, { useReducer } from 'react';\r\nimport Axios from 'axios';\r\nimport GithubContext from './githubContext';\r\nimport GithubReducer from './githubReducer';\r\n\r\nimport {\r\n    SEARCH_USERS,\r\n    SET_LOADING,\r\n    CLEAR_USERS,\r\n    GET_USER,\r\n    GET_REPOS\r\n} from '../types';\r\n\r\nconst GithubState = props => {\r\n    const initialState = {\r\n        users: [],\r\n        user: {},\r\n        repos: [],\r\n        loading: false,\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(GithubReducer, initialState);\r\n\r\n    //Search Users\r\n    const searchUsers = async (text) => {\r\n        setLoading();\r\n        const res = await Axios.get(\r\n            `https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\r\n        dispatch({ type: SEARCH_USERS, payload: res.data.items });\r\n    };\r\n\r\n    //Get User\r\n    const getUser = async (username) => {\r\n        setLoading();\r\n        const res = await Axios.get(\r\n            `https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\r\n        dispatch({ type: GET_USER, payload: res.data })\r\n    };\r\n\r\n    //get Repos\r\n    const getUserRepos = async (username) => {\r\n        setLoading();\r\n        const res = await Axios.get(\r\n            `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\r\n        dispatch({ type: GET_REPOS, payload: res.data })\r\n    };\r\n\r\n    //Clear users\r\n    const clearUsers = () => dispatch({ type: CLEAR_USERS });\r\n\r\n    //Set Loading\r\n    const setLoading = () => dispatch({ type: SET_LOADING });\r\n\r\n    //we return a provider which wraps around our whole app , so those values we can \r\n    // access in all the components\r\n    return <GithubContext.Provider\r\n        value={{\r\n            users: state.users,\r\n            user: state.user,\r\n            repos: state.repos,\r\n            loading: state.loading,\r\n            searchUsers,\r\n            getUser,\r\n            getUserRepos,\r\n            clearUsers\r\n\r\n        }} >\r\n        {props.children}\r\n    </GithubContext.Provider>\r\n}\r\n\r\nexport default GithubState;","import { SET_ALERT, REMOVE_ALERT } from '../types';\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case SET_ALERT:\r\n            return action.payload\r\n        case REMOVE_ALERT:\r\n            return null\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { useReducer } from 'react';\r\nimport AlertContext from './alertContext';\r\nimport AlertReducer from './alertReducer';\r\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\r\n\r\nconst AlertState = props => {\r\n    const initialState = null;\r\n    const [state, dispatch] = useReducer(AlertReducer, initialState);\r\n\r\n    // Set Alert\r\n    const setAlert = (msg, type) => {\r\n        dispatch({ type: SET_ALERT, payload: { msg, type } })\r\n        setTimeout(() => dispatch({ type: REMOVE_ALERT }), 5000);\r\n    };\r\n\r\n    return <AlertContext.Provider\r\n        value={{\r\n            alert: state,\r\n            setAlert,\r\n        }} >\r\n        {props.children}\r\n    </AlertContext.Provider>\r\n}\r\n\r\nexport default AlertState;","import React from \"react\";\r\n\r\nconst Notfound = () => {\r\n  return (\r\n    <div>\r\n      <h1>404 Not Found</h1>\r\n      <p className='lead'>The page you are looking for does not exists....</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notfound;\r\n","import React, { Fragment } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Navbar from \"./components/layout/Navbar\";\nimport About from \"./components/pages/About\";\nimport Alert from \"./components/layout/Alert\";\nimport Search from \"./components/users/Search\";\nimport Users from \"./components/users/Users\";\nimport User from \"./components/users/User\";\n\nimport GithubState from './context/github/GithubState';\nimport AlertState from './context/alert/AlertState';\nimport Notfound from \"./components/pages/Notfound\";\n\nconst App = () => {\n  // search Github Users\n  // Get a single github user\n  // Get User Repos\n  // clear users\n  // set aalert\n  return (\n    <GithubState>\n      <AlertState>\n        <Router>\n          <div className='App'>\n            <Navbar />\n            <div className='container'>\n              <Alert />\n              <Switch>\n                <Route\n                  exact\n                  path='/'\n                  render={(props) => (\n                    <Fragment>\n                      <Search />\n                      <Users />\n                    </Fragment>\n                  )}\n                />\n                <Route exact path='/about' component={About} />\n                <Route exact path='/user/:login' component={User} />\n                <Route component={Notfound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </AlertState>\n    </GithubState>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}